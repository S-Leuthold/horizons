% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation-run_single_evaluation.R
\name{evaluate_model_config}
\alias{evaluate_model_config}
\title{Evaluate a Single Model Configuration on Spectral Data}
\usage{
evaluate_model_config(
  input_data,
  covariate_data,
  variable,
  model,
  transformation,
  preprocessing,
  feature_selection,
  covariates,
  include_covariates,
  pruning = TRUE,
  grid_size = 10,
  bayesian_iter = 15,
  cv_folds = 5,
  parallel_strategy = "cv_folds"
)
}
\arguments{
\item{input_data}{A \code{tibble} containing spectral features with columns: \code{Sample_ID}, \code{Wavenumber}, \code{Absorbance},
and the target response variable.}

\item{covariate_data}{Optional \code{tibble} containing external covariates, matched by \code{Sample_ID}.
Required if \code{include_covariates = TRUE}.}

\item{variable}{Character. Name of the response variable to model (must be in \code{input_data}).}

\item{model}{Character. Model type to evaluate (e.g., \code{"Cubist"}, \code{"PLSR"}, \code{"SVM"}).}

\item{transformation}{Character. Outcome transformation label (e.g., \code{"Log Transformation"}).}

\item{preprocessing}{Character. Spectral preprocessing method (e.g., \code{"SNV + SG1"}).}

\item{covariates}{Optional character vector of covariate names to include in the model.}

\item{include_covariates}{Logical. Whether to include covariates in the model workflow.}

\item{pruning}{Logical. Whether to skip poor-performing models after grid tuning based on RRMSE threshold (default = \code{TRUE}).}

\item{grid_size}{Integer. Number of initial grid search candidates (default = 10).}

\item{bayesian_iter}{Integer. Number of Bayesian tuning iterations (default = 15).}

\item{cv_folds}{Integer. Number of cross-validation folds for resampling (default = 5).}
}
\value{
A named \code{list} containing:
\itemize{
\item \strong{evaluation_results}: A \code{tibble} of hold-out performance metrics (RRMSE, RÂ², etc.).
\item \strong{tuned_models}: A \code{tibble} containing the full tuned workflow, final workflow, and fitted model (stack-compatible).
\item \strong{error}: Logical flag indicating whether the model failed.
\item \strong{pruned}: Logical flag indicating whether the model was pruned due to poor early results.
\item \strong{wflow_id}: Character ID of the workflow.
\item \strong{reason}: Text summary of any error or pruning reason (or \code{NULL} if successful).
}
}
\description{
Builds, tunes, fits, and evaluates a single spectral model configuration for a specified response variable.
This includes response transformation, spectral preprocessing, optional covariate inclusion, grid search,
Bayesian optimization, final model fitting, and hold-out evaluation. Designed for use within
\code{safe_run_model()} in the \code{horizons} batch modeling pipeline.
}
\details{
The function proceeds through the full modeling lifecycle:
\enumerate{
\item Build recipe with response transformation, spectral preprocessing, and optional covariates.
\item Define the model specification via \code{define_model_specifications()}.
\item Perform grid search using \code{tune::tune_grid()} to explore hyperparameter space.
\item Optionally prune poor configurations early using RRMSE thresholds.
\item Refine using Bayesian optimization (\code{tune::tune_bayes()}).
\item Finalize, fit, and evaluate the best model on a hold-out set.
\item Return workflows and evaluation outputs for stacking and inspection.
}

All stages use \code{safely_execute()} for robust error handling. Messages are emitted via \code{cli} to support real-time monitoring.
The function supports automatic \code{mtry} finalization and dynamic tuning grid construction.
}
\examples{
\dontrun{
config_result <- evaluate_model_config(
  input_data        = my_spectral_data,
  covariate_data    = my_covs,
  variable          = "MAOM_C_g_kg",
  model             = "cubist",
  transformation    = "Log",
  preprocessing     = "snv",
  covariates        = c("Clay", "pH"),
  include_covariates = TRUE
)

config_result$evaluation_results
}

}
\seealso{
\code{\link{safe_run_model}}, \code{\link{run_model_evaluation}},
\code{\link{build_recipe}}, \code{\link{define_model_specifications}},
\code{\link{evaluate_final_models}}
}
