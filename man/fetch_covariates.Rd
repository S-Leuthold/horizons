% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/covariates-orchestrator.R
\name{fetch_covariates}
\alias{fetch_covariates}
\title{Orchestrate Soil and Climate Covariate Prediction}
\usage{
fetch_covariates(
  input_data,
  configurations = NULL,
  soil_covariates = NULL,
  climate_covariates = NULL,
  spatial_covariates = NULL,
  n_similar = 35000,
  variance_threshold = 0.99,
  bayesian_iter = 10,
  prop_train = 0.85,
  climate_start_year = 2003,
  climate_end_year = 2024,
  allow_par = FALSE,
  n_workers = NULL,
  cache_dir = tools::R_user_dir("horizons", "cache"),
  refresh_soil = FALSE,
  refresh_climate = FALSE,
  return_configs = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{input_data}{Data frame or tibble with required columns:
\itemize{
\item Sample_ID: Unique sample identifiers
\item MIR spectral columns (wavenumbers as column names)
\item Longitude: Decimal degrees (-180 to 180)
\item Latitude: Decimal degrees (-90 to 90)
}}

\item{configurations}{Optional tibble from create_configs(). If provided, extracts
unique covariates from all configuration rows. Takes precedence over individual
covariate parameters.}

\item{soil_covariates}{Character vector of soil properties to predict
(e.g., c("clay", "sand", "ph", "oc", "n")). Ignored if configurations provided.}

\item{climate_covariates}{Character vector of climate variables to fetch
(e.g., c("MAT", "MAP", "AI", "PET", "GDD", "Precip_Seasonality")).
Ignored if configurations provided.}

\item{spatial_covariates}{Character vector of spatial covariates (future implementation).
Ignored if configurations provided.}

\item{n_similar}{Integer. Number of OSSL samples for training soil models (default: 20000)}

\item{variance_threshold}{Numeric. PCA variance to retain (0-1, default: 0.85)}

\item{bayesian_iter}{Integer. Bayesian optimization iterations (default: 3, use 0 for grid only)}

\item{prop_train}{Numeric. Proportion for training in train/val split (default: 0.85)}

\item{climate_start_year}{Integer. Start year for Daymet climate data (default: 2003)}

\item{climate_end_year}{Integer. End year for Daymet climate data (default: 2024)}

\item{allow_par}{Logical. Enable parallel processing (default: FALSE)}

\item{n_workers}{Integer. Number of parallel workers. NULL for auto-detect (default: NULL)}

\item{cache_dir}{Character. Directory for caching data (default: tools::R_user_dir("horizons", "cache"))}

\item{refresh_soil}{Logical. Force re-prediction of soil properties (default: FALSE)}

\item{refresh_climate}{Logical. Force re-download of climate data (default: FALSE)}

\item{return_configs}{Logical. Include configurations in output if built internally (default: FALSE)}

\item{verbose}{Logical. Print progress messages (default: TRUE)}
}
\value{
Named list containing:
\itemize{
\item covariate_data: Tibble with all predicted/fetched covariates joined to input data
\item soil_predictions: List with prediction details (models, metrics) if soil covariates requested
\item climate_summary: Tibble summarizing climate data fetching if climate covariates requested
\item configurations: Tibble of configurations if return_configs = TRUE
\item metadata: List with timing, cache usage, and other diagnostic information
}
}
\description{
Main orchestrator function that coordinates prediction of soil properties from MIR spectra
and fetching of climate data from geographic coordinates. Accepts either pre-built
configurations from create_configs() or individual covariate specifications.
}
\examples{
\dontrun{
# Using pre-built configurations
configs <- create_configs(
  soil_covariates = c("clay", "ph"),
  climate_covariates = c("MAT", "MAP")
)
results <- horizons_orchestrator(
  input_data = my_spectra_data,
  configurations = configs
)

# Using direct covariate specification
results <- horizons_orchestrator(
  input_data = my_spectra_data,
  soil_covariates = c("clay", "sand", "ph"),
  climate_covariates = c("MAT", "MAP", "AI"),
  allow_par = TRUE
)
}

}
