% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_error_handling.R
\name{safely_execute}
\alias{safely_execute}
\title{Safely Execute an Expression and Capture Errors}
\usage{
safely_execute(
  expr,
  default_value = NULL,
  error_message = NULL,
  log_error = TRUE,
  capture_trace = FALSE,
  trace_log_file = NULL
)
}
\arguments{
\item{expr}{An R expression to evaluate.}

\item{default_value}{Value to return as \code{result} if an error occurs (default: \code{NULL}).}

\item{error_message}{Optional character string. If provided, it will be evaluated
using \code{glue::glue()} and shown as part of the warning.}

\item{log_error}{Logical. Should errors be logged with \code{cli::cli_warn()}? (default: \code{TRUE})}

\item{capture_trace}{Logical. If \code{TRUE}, captures the call trace using \code{rlang}.}

\item{trace_log_file}{Optional path to write the trace if \code{capture_trace = TRUE}.}
}
\value{
A list with elements:
\itemize{
\item \code{result}: the evaluated result or \code{default_value} on error
\item \code{error}: the error object (or \code{NULL} if none)
\item \code{trace}: call trace if \code{capture_trace = TRUE} and an error occurred
}
}
\description{
This function wraps an expression using \code{purrr::safely()} to ensure errors
do not halt execution. It captures error messages, optionally logs them,
and can attach trace information for debugging.
}
\keyword{internal}
