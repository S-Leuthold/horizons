% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_error_handling.R
\name{safely_execute}
\alias{safely_execute}
\title{Safely Execute an Expression and Capture Errors}
\usage{
safely_execute(
  expr,
  default_value = NULL,
  error_message = NULL,
  log_error = TRUE,
  return_result_list = getOption("horizons.return_safely_result", FALSE)
)
}
\arguments{
\item{expr}{An R expression or function call to execute safely.}

\item{default_value}{The value to return if \code{expr} results in an error (default: \code{NULL}).}

\item{error_message}{A character string. If provided, this message will be used
in a \code{cli::cli_warn} call if an error occurs. You can
embed variables from the calling environment using glue-style
syntax (e.g., \code{{my_var}}).}

\item{log_error}{Logical. If \code{TRUE}, an error message will be logged using \code{cli::cli_warn()}
if an error occurs (default: \code{TRUE}).}


\item{return_result_list}{Logical. If \code{TRUE}, the function returns a list containing
the result and any caught error. Defaults to the option
\code{horizons.return_safely_result} which is \code{FALSE}.}
}
\value{
If \code{return_result_list} is \code{FALSE} (default), the result of \code{expr}
if successful or \code{default_value} if an error occurs. If
\code{return_result_list} is \code{TRUE}, a list with components \code{result}
and \code{error} is returned.
}
\description{
This helper function wraps an expression or function call using \code{purrr::safely()}
to prevent errors from stopping execution. It optionally logs the error
and returns a specified default value on failure.
}
\keyword{internal}
