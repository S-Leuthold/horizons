% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_run_full_evaluation.R
\name{full_model_evaluation}
\alias{full_model_evaluation}
\title{Run Full Ensemble Model Evaluation on Spectral Data}
\usage{
full_model_evaluation(
  input_data,
  models,
  transformations,
  preprocessing,
  variable,
  include_covariates = FALSE,
  covariate_data = NULL,
  expand_covariate_grid = FALSE,
  grid_size = 10,
  bayesian_iter = 15,
  cv_folds = 5
)
}
\arguments{
\item{input_data}{A data frame containing columns \code{Sample_ID}, \code{Wavenumber}, \code{Absorbance}, and the response variable to predict.}

\item{models}{Character vector of model types to include (e.g., \code{"Cubist"}, \code{"PLSR"}, \code{"Random Forest"}).}

\item{transformations}{Character vector of response transformation labels. Options include:
\code{"No Transformation"}, \code{"Log Transformation"}, \code{"Square Root Transformation"}, \code{"Box-Cox Transformation"}.}

\item{preprocessing}{Character vector of spectral preprocessing methods. Options include:
\code{"No Preprocessing"}, \code{"Savitzky Golay - 0 Deriv"}, \code{"Savitzky Golay - 1 Deriv"}, and SNV variants.}

\item{variable}{Character string specifying the name of the response variable to model (must be present in \code{input_data}).}

\item{include_covariates}{Logical. If \code{TRUE}, includes additional covariates during modeling.}

\item{covariate_data}{Optional data frame of covariates (must include \code{Sample_ID} column). Required if \code{include_covariates = TRUE}.}

\item{expand_covariate_grid}{Logical. If \code{TRUE}, generates all possible covariate subsets for inclusion in the model grid.}

\item{grid_size}{Integer. Number of parameter combinations to evaluate per model in the initial grid search (default = 10).}

\item{bayesian_iter}{Integer. Number of Bayesian tuning iterations per model (default = 15).}

\item{cv_folds}{Integer. Number of cross-validation folds used in resampling (default = 5).}
}
\value{
A named list with the following elements:
\describe{
\item{evaluation_results}{A tibble with hold-out performance metrics for each finalized model (\code{rsq}, \code{rmse}, \code{rrmse}).}
\item{tuned_models}{A tibble of tuned workflows, including \code{final_wf}, \code{fitted_wf}, and back-transformed tuning results.}
\item{training_data}{The internal training split used during model fitting.}
\item{evaluation_data}{The held-out test set used to evaluate final models.}
}
}
\description{
Constructs and evaluates an ensemble of models to predict a soil property using
MIR spectra and optional covariates. The function performs model grid construction,
recipe creation, hyperparameter tuning (grid + Bayesian), model finalization,
and evaluation on a hold-out test set. Designed to support high-throughput model screening
and optimization in soil spectroscopy contexts.
}
\details{
This function integrates several modular components from the \code{tidymodels} and \code{workflowsets} ecosystems.
It supports flexible ensemble definitions and prioritizes interpretability of evaluation metrics.
The full modeling lifecycle is run automatically, including recipe generation, tuning,
and model fitting across a user-defined grid of modeling strategies.
}
\section{Model Types}{

Supported models include:
\itemize{
\item Partial Least Squares Regression (PLSR)
\item Cubist
\item Random Forest
\item Support Vector Machine (SVM)
\item Bagged Neural Network (BNN)
}
}

\examples{
\dontrun{
results <- full_model_evaluation(
  input_data            = my_spectra_data,
  models                = c("Cubist", "PLSR"),
  transformations       = c("No Transformation", "Log Transformation"),
  preprocessing         = c("Savitzky Golay - 0 Deriv", "SNV + SG1"),
  variable              = "SOC",
  include_covariates    = TRUE,
  covariate_data        = soil_covariates,
  expand_covariate_grid = FALSE,
  grid_size             = 10,
  bayesian_iter         = 15,
  cv_folds              = 5
)
}

}
\seealso{
\code{\link[=build_model_grid]{build_model_grid()}}, \code{\link[=build_recipe]{build_recipe()}}, \code{\link[=run_bayesian_tuning]{run_bayesian_tuning()}}, \code{\link[=evaluate_final_models]{evaluate_final_models()}},
\code{\link[workflowsets:workflow_set]{workflowsets::workflow_set()}}, \code{\link[tune:tune_grid]{tune::tune_grid()}}, \code{\link[yardstick:metric_set]{yardstick::metric_set()}}
}
