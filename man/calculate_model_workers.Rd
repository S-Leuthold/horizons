% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation-worker_manager.R
\name{calculate_model_workers}
\alias{calculate_model_workers}
\title{Calculate Optimal Worker Allocation for Model Type}
\usage{
calculate_model_workers(
  model_type,
  feature_selection = "none",
  n_workers_available,
  n_features = NULL,
  n_samples = NULL
)
}
\arguments{
\item{model_type}{Character. Model type (e.g., "random_forest", "xgboost", "plsr")}

\item{feature_selection}{Character. Feature selection method (e.g., "boruta", "cars", "pca")}

\item{n_workers_available}{Integer. Maximum workers available}

\item{n_features}{Integer. Number of features in dataset}

\item{n_samples}{Integer. Number of samples in dataset}
}
\value{
Integer. Recommended number of workers for this model configuration
}
\description{
Determines optimal worker allocation based on model type and complexity.
Memory-intensive models get fewer workers to prevent OOM errors.
}
\details{
Models are categorized by memory intensity:
\itemize{
\item High: Random Forest, XGBoost, Boruta, CARS (use 50-75\% of available workers)
\item Medium: SVM, Cubist, Neural Networks (use 75-90\% of available workers)
\item Low: PLSR, Elastic Net, Linear models (use 90-100\% of available workers)
}
}
\examples{
\dontrun{
# Memory-intensive configuration
n_workers <- calculate_model_workers(
  model_type          = "random_forest",
  feature_selection   = "boruta",
  n_workers_available = 50,
  n_features          = 1000,
  n_samples           = 500
)
# Returns ~25-35 workers to prevent memory issues
}

}
