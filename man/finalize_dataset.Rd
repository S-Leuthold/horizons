% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inputs-finalize.R
\name{finalize_dataset}
\alias{finalize_dataset}
\title{Finalize Dataset with Outlier Detection}
\usage{
finalize_dataset(
  dataset,
  response_variable,
  spectral_outlier_method = "mahalanobis",
  detect_response_outliers = TRUE,
  spectral_cutoff = 0.975,
  response_cutoff = 1.5,
  remove_outliers = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{dataset}{Tibble. Output from create_dataset() with spectra and response data}

\item{response_variable}{Character. Name of response variable to check for outliers}

\item{spectral_outlier_method}{Character. Method for spectral outlier detection:
"mahalanobis" (default), "pca", or "none"}

\item{detect_response_outliers}{Logical. Detect outliers in response variable using IQR?
Default: TRUE}

\item{spectral_cutoff}{Numeric. Percentile threshold for spectral outliers (0-1).
Default: 0.975}

\item{response_cutoff}{Numeric. IQR multiplier for response outliers.
Default: 1.5}

\item{remove_outliers}{Logical. Remove outliers (TRUE) or just flag them (FALSE)?
Default: FALSE}

\item{verbose}{Logical. Print progress messages. Default: TRUE}
}
\value{
A tibble with the same structure as input plus quality control information:
\describe{
\item{<original_cols>}{All original columns from input dataset}
\item{outlier_flag}{Character. "good" for normal samples, "outlier" for flagged samples}
}

If \code{remove_outliers = TRUE}, flagged samples are removed from the tibble.
If \code{remove_outliers = FALSE} (default), all samples are retained with flags.
}
\description{
Performs comprehensive outlier detection as the final quality control step
before model evaluation. This function identifies problematic samples in both
spectral and response data using robust statistical methods, ensuring data
quality for downstream modeling workflows.
}
\details{
The outlier detection pipeline employs a two-pronged approach:

\strong{Spectral Outlier Detection:}
\itemize{
\item PCA projection using Kaiser criterion for dimensionality reduction
\item Robust covariance estimation (MCD) to handle existing outliers
\item Mahalanobis distance calculation in PC space
\item Chi-square threshold testing at specified percentile
}

\strong{Response Outlier Detection:}
\itemize{
\item Interquartile Range (IQR) method with configurable multiplier
\item Identification of values beyond Q1 - k\emph{IQR or Q3 + k}IQR
\item Suitable for both normal and moderately skewed distributions
}

The function provides flexible handling through flagging vs. removal options,
allowing users to inspect outliers before making final decisions.
}
\examples{
\dontrun{
# Basic outlier detection and flagging
clean_data <- finalize_dataset(
  dataset = model_dataset,
  response_variable = "SOC",
  remove_outliers = FALSE  # Flag only
)

# Strict outlier removal with custom thresholds
clean_data <- finalize_dataset(
  dataset = model_dataset,
  response_variable = "clay",
  spectral_cutoff = 0.95,    # More sensitive
  response_cutoff = 2.0,     # More conservative
  remove_outliers = TRUE     # Remove outliers
)

# Skip spectral outlier detection
clean_data <- finalize_dataset(
  dataset = model_dataset,
  response_variable = "pH",
  spectral_outlier_method = "none"
)
}

}
\seealso{
\code{\link{create_dataset}} for dataset preparation,
\code{\link{evaluate_models_local}} for model evaluation,
\code{\link{create_configs}} for configuration setup

Other inputs: 
\code{\link{create_configs}()},
\code{\link{create_dataset}()},
\code{\link{preprocess_spectra}()},
\code{\link{read_spectra}()}
}
\concept{inputs}
\keyword{outlier-detection}
\keyword{quality-control}
