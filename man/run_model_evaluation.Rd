% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation-run_model_batches.R
\name{run_model_evaluation}
\alias{run_model_evaluation}
\title{Run Full Batch Model Evaluation Across Configuration Grid}
\usage{
run_model_evaluation(
  config,
  input_data,
  covariate_data,
  variable,
  output_dir = NULL,
  grid_size_eval = 10,
  bayesian_iter_eval = 15,
  cv_folds_eval = 5,
  retrain_top_models = TRUE,
  number_models_retained = 15,
  grid_size_final = 25,
  bayesian_iter_final = 20,
  cv_folds_final = 15,
  pruning = FALSE,
  parallel_strategy = c("cv_folds", "models"),
  workers = NULL,
  chunk_size = 50,
  checkpoint_dir = NULL,
  resume = TRUE
)
}
\arguments{
\item{config}{A \code{tibble} of model configurations to evaluate. Must include columns:
\itemize{
\item \code{model}: Name of model (e.g., \code{"PLSR"}, \code{"Cubist"}).
\item \code{transformation}: Outcome transformation label (e.g., \code{"Log Transformation"}).
\item \code{preprocessing}: Spectral preprocessing method (e.g., \code{"SNV + SG1"}).
\item \code{covariates}: List-column of covariate sets (e.g., \code{c("Clay", "pH")}).
\item \code{include_covariates}: Logical flag.
}}

\item{input_data}{A \code{tibble} with preprocessed spectral data, including \code{Sample_ID},
wavenumber columns, and the target response variable.}

\item{covariate_data}{Optional \code{tibble} of predicted covariates matched by \code{Sample_ID}.
Required if \code{include_covariates = TRUE} in any row of \code{config}.}

\item{variable}{Character. Name of the response variable (must be in \code{input_data}).}

\item{output_dir}{Path to output directory. Defaults to timestamped folder under \code{variable}.}

\item{grid_size_eval}{Integer. Number of combinations in the initial grid search (default = 10).}

\item{bayesian_iter_eval}{Integer. Number of iterations in Bayesian tuning (default = 15).}

\item{cv_folds_eval}{Integer. Number of CV folds during evaluation phase (default = 5).}

\item{retrain_top_models}{Logical. Whether to refit the top N models after screening (default = \code{TRUE}).}

\item{number_models_retained}{Integer. Number of top models to refit if \code{retrain_top_models = TRUE} (default = 15).}

\item{grid_size_final}{Integer. Grid size for refitting stage (default = 25).}

\item{bayesian_iter_final}{Integer. Bayesian iterations during refitting (default = 20).}

\item{cv_folds_final}{Integer. Number of CV folds for refitting phase (default = 15).}

\item{pruning}{Logical. Whether to enable pruning of poor configurations early (default = \code{FALSE}).}

\item{parallel_strategy}{Character. Parallelization strategy: \code{"cv_folds"} (default, legacy)
parallelizes CV within each model, or \code{"models"} parallelizes across model configurations.}

\item{workers}{Integer. Number of parallel workers. If \code{NULL}, defaults to \code{detectCores() - 3}
for \code{"cv_folds"} strategy or \code{detectCores() - 1} for \code{"models"} strategy.}

\item{chunk_size}{Integer. When using \code{"models"} strategy, process models in chunks of this size
to manage memory (default = 50). Ignored for \code{"cv_folds"} strategy.}

\item{checkpoint_dir}{Character. Directory for checkpoint files when using \code{"models"} strategy.
Enables resuming interrupted runs. If \code{NULL}, uses \verb{output_dir/checkpoints/}.}

\item{resume}{Logical. Whether to resume from existing checkpoints (default = \code{TRUE}).}
}
\value{
If \code{retrain_top_models = FALSE}, returns a \code{tibble} summarizing evaluation metrics
for each configuration. If \code{TRUE}, returns a \code{list} with:
\itemize{
\item \strong{full_summary}: A \code{tibble} of metrics and metadata from the initial evaluation.
\item \strong{refit_summary}: A \code{tibble} of metrics from the final refitting stage.
}
}
\description{
Executes ensemble modeling workflows for a grid of model configurations, applying
grid + Bayesian tuning, evaluation, pruning, and optional refitting of top-performing models.
Each model run is isolated and fault-tolerant, using \code{safe_run_model()} for robust logging and
\code{prune_model_output()} to minimize memory. Supports caching, parallel execution, and ETA tracking.
}
\details{
This function is designed for large-scale, reproducible modeling across 100s of candidate
configurations. Each model run:
\enumerate{
\item Is isolated and wrapped in \code{safe_run_model()} to prevent failure propagation.
\item Produces a pruned \code{.qs} file with only workflows and metrics needed for stacking.
\item Logs run metadata (time, memory, status) and handles memory cleanup between runs.
\item Returns a summary table for all configurations, and optionally retrains the top-N models.
}

Memory usage is tracked with thresholds, and parallel evaluation is handled via \code{future::plan(multisession)}.
Outputs are written to disk in \code{output_dir}, including timestamped summary files for downstream stacking.

ETA messages are printed every 25 configurations or 5 refits.
}
\examples{
\dontrun{
results <- run_model_evaluation(
  config                = model_config_grid,
  input_data            = spectral_data,
  covariate_data        = predicted_covs,
  variable              = "MAOM_C_g_kg",
  grid_size_eval        = 10,
  bayesian_iter_eval    = 15,
  number_models_retained = 20
)
}

}
\seealso{
\code{\link{safe_run_model}}, \code{\link{prune_model_output}}, \code{\link{full_model_evaluation}},
\code{\link[qs]{qread}}, \code{\link[stacks]{add_candidates}}
}
