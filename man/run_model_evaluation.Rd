% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation-run_model_batches.R
\name{run_model_evaluation}
\alias{run_model_evaluation}
\title{Run Full Batch Model Evaluation Across a Configuration Grid}
\usage{
run_model_evaluation(
  config,
  input_data,
  covariate_data,
  variable,
  output_dir = NULL,
  grid_size = 25,
  bayesian_iter = 20,
  cv_folds = 10,
  return_outputs = FALSE,
  pruning = TRUE,
  summary_file = NULL,
  parallel = TRUE
)
}
\arguments{
\item{config}{A tibble of model configurations to evaluate. Must include the following columns:
\describe{
\item{model}{Character. Name of the model to run (e.g., \code{"PLSR"}, \code{"Cubist"}).}
\item{transformation}{Character. Outcome transformation label (e.g., \code{"Log Transformation"}).}
\item{preprocessing}{Character. Spectral preprocessing method (e.g., \code{"SNV + SG1"}).}
\item{covariates}{List-column of covariates to include (e.g., \code{c("Clay", "pH")}).}
\item{include_covariates}{Logical. Whether to include external covariates in modeling.}
}}

\item{input_data}{A preprocessed spectral tibble containing columns \code{Sample_ID}, \code{Wavenumber}, and \code{Absorbance},
along with the target response variable.}

\item{covariate_data}{A tibble of predicted covariate values, matched by \code{Sample_ID}. Required if \code{include_covariates = TRUE}.}

\item{variable}{Character string specifying the name of the response variable to model (must be present in \code{input_data}).}

\item{output_dir}{Directory where all pruned results and error logs will be saved. Default is \code{"batch_model_outputs"}.}

\item{grid_size}{Integer. Number of hyperparameter combinations to evaluate per model in the initial grid search (default = 10).}

\item{bayesian_iter}{Integer. Number of iterations to run in the Bayesian tuning phase (default = 15).}

\item{cv_folds}{Integer. Number of cross-validation folds used during resampling (default = 5).}

\item{return_outputs}{Logical. If \code{TRUE}, also return the full list of raw outputs from each \code{safe_run_model()} call. Default = \code{FALSE}.}

\item{summary_file}{Optional. Full file path for saving the summary table. If \code{NULL}, a timestamped file will be created in \code{output_dir}.}

\item{save_summary}{Logical. If \code{TRUE}, save the final summary table to disk as a \code{.qs} file. Default = \code{TRUE}.}
}
\value{
Either:
\describe{
\item{Tibble (default)}{A summary table with one row per model configuration. Includes workflow ID, performance metrics, status flags, and file paths.}
\item{List (if \code{return_outputs = TRUE})}{A list with two elements:
\describe{
\item{summary}{Tibble as above.}
\item{raw_results}{List of all outputs returned by \code{safe_run_model()} for further inspection.}
}
}
}
}
\description{
Iterates over a tibble of model configurations to safely execute the full ensemble modeling
pipeline for each combination. For each configuration, this function:
(1) calls \code{full_model_evaluation()} with atomic inputs,
(2) wraps the run in error handling and structured logging via \code{safe_run_model()},
(3) prunes the output to retain only evaluation metrics and workflows required for stacking,
and (4) aggregates a run-level summary table of model performance, file paths, and error status.
}
\details{
Designed for high-throughput batch modeling of spectral data with optional covariates.
Can optionally return full raw results for interactive inspection, or save only a lightweight
summary table for downstream filtering and stacking.

This function is optimized for large-scale, memory-safe model screening over 100s of configurations.
It is designed to work with atomic modeling inputs â€” no internal covariate grid expansion is performed.
Covariates should be precomputed using \code{predict_covariates()} and passed in full.

Each model run is safely wrapped via \code{safe_run_model()}, and results are pruned via \code{prune_model_output()}
to retain only metrics and fitted workflows. Errors are logged to JSON files and do not interrupt the loop.
Garbage collection and timing gaps are included by default to reduce memory pressure.

Output files are saved in the specified \code{output_dir}. A timestamped summary file is written automatically
unless \code{save_summary = FALSE}. These files can be reloaded using \code{qs::qread()} for further analysis or stacking.
}
\section{Run Lifecycle}{

\enumerate{
\item Loop over each row of \code{config}
\item Call \code{safe_run_model()} with filtered inputs
\item Save pruned output as \code{.qs} file
\item Aggregate evaluation metrics and paths into \code{summary}
\item Optionally return raw results and/or write summary file
}
}

\examples{
\dontrun{
results <- run_batch_models(
  config         = expanded_model_grid,
  input_data     = Input_Data,
  covariate_data = Covariate_Data$Predicted_Values,
  variable       = "MAOM_C_g_kg"
)
}
}
\seealso{
\code{\link[=safe_run_model]{safe_run_model()}}, \code{\link[=prune_model_output]{prune_model_output()}}, \code{\link[=full_model_evaluation]{full_model_evaluation()}},
\code{\link[qs:qread]{qs::qread()}}, \code{\link[stacks:add_candidates]{stacks::add_candidates()}}
}
