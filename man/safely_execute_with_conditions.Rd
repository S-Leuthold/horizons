% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-errors.R
\name{safely_execute_with_conditions}
\alias{safely_execute_with_conditions}
\title{Safely Execute with Condition Capture}
\usage{
safely_execute_with_conditions(
  expr,
  default_value = NULL,
  error_message = NULL,
  log_error = TRUE,
  capture_trace = FALSE,
  trace_log_file = NULL
)
}
\arguments{
\item{expr}{An expression to evaluate, passed unquoted.}

\item{default_value}{Value to return if the expression errors. Default is \code{NULL}.}

\item{error_message}{Optional string interpolated via \code{glue::glue()}, used as the log message.}

\item{log_error}{Logical. If \code{TRUE} (default), logs the error using \code{cli::cli_warn()}.}

\item{capture_trace}{Logical. If \code{TRUE}, captures a traceback using \code{rlang::trace_back()}.}

\item{trace_log_file}{Optional file path to write the trace, if \code{capture_trace = TRUE}.}
}
\value{
Same as safely_execute but with capture_conditions always TRUE
}
\description{
Convenience wrapper for safely_execute that always captures warnings and messages.
Useful for debugging and quality control where you need to track all conditions,
not just errors.
}
