% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models-recipes.R
\name{build_recipe}
\alias{build_recipe}
\title{Build Tidymodels Recipe for Spectral + Covariate Modeling}
\usage{
build_recipe(
  input_data,
  spectral_transformation,
  response_transformation,
  feature_selection_method,
  covariate_selection = NULL,
  covariate_data = NULL
)
}
\arguments{
\item{input_data}{A data frame containing a \code{Response} column, spectral predictors
(named as wavenumbers, e.g., \code{600}, \code{602}, ...), and a \code{Sample_ID} column.}

\item{spectral_transformation}{Character. Spectral preprocessing pipeline. One of:
\itemize{
\item \code{"raw"}
\item \code{"sg"}
\item \code{"snv"}
\item \code{"deriv1"}
\item \code{"deriv2"}
\item \code{"snv_deriv1"}
\item \code{"snv_deriv2"}
}}

\item{response_transformation}{Character. Transformation applied to response variable. One of:
\itemize{
\item \code{"No Transformation"}
\item \code{"Log Transformation"}
\item \code{"Square Root Transformation"}
}}

\item{feature_selection_method}{Character. Feature selection approach. One of:
\itemize{
\item \code{"pca"} - Principal component analysis (99.5\% variance threshold)
\item \code{"correlation"} - Correlation-based selection
\item \code{"boruta"} - Boruta algorithm for feature importance
\item \code{"cars"} - Competitive Adaptive Reweighted Sampling
\item \code{"none"} - No feature selection
}}

\item{covariate_selection}{Optional character vector of covariates to include (e.g., \code{"Clay"}, \code{"pH"}).
Use \code{"No Covariates"} or \code{NULL} to exclude.}

\item{covariate_data}{Optional data frame of covariates (must include \code{Sample_ID}). Required
if any covariates are selected.}
}
\value{
A \code{recipes::recipe} object containing the full preprocessing pipeline.
}
\description{
Constructs a preprocessing pipeline using the recipes framework. Applies user-specified
transformations to the response and spectra, optionally adds covariates, and includes PCA
dimensionality reduction. This function supports stacking workflows and harmonized modeling
across different preprocessing combinations.
}
\details{
Roles for \code{Sample_ID} and \code{Project} (if present) are set to \code{"id"} and
\code{"metadata"}, respectively. Response transformation steps are marked \code{skip = TRUE}
to preserve inverse-transform compatibility. Spectral preprocessing is handled by
\code{\link[=step_transform_spectra]{step_transform_spectra()}}; covariates are injected using \code{\link[=step_add_covariates]{step_add_covariates()}}.
}
\examples{
\dontrun{
build_recipe(
  input_data              = df,
  spectral_transformation = "snv_deriv1",
  response_transformation = "Log Transformation",
  covariate_selection     = c("Clay", "pH"),
  covariate_data          = covariates
)
}

}
\seealso{
\code{\link[=step_transform_spectra]{step_transform_spectra()}}, \code{\link[=step_add_covariates]{step_add_covariates()}}, \code{\link[=build_model_grid]{build_model_grid()}}
}
\keyword{internal}
