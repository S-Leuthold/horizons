% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation-models_parallel.R
\name{evaluate_models_parallel}
\alias{evaluate_models_parallel}
\title{Evaluate Multiple Model Configurations in Parallel}
\usage{
evaluate_models_parallel(
  configs,
  input_data,
  covariate_data = NULL,
  variable,
  n_workers = 4,
  output_dir = NULL,
  chunk_size = 50,
  grid_size = 10,
  bayesian_iter = 15,
  cv_folds = 5,
  seed = 123,
  save_individual_models = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{configs}{A tibble of model configurations, typically from \code{create_project_configurations()}}

\item{input_data}{A tibble containing spectral features and response variable}

\item{covariate_data}{Optional tibble containing external covariates}

\item{variable}{Character. Name of the response variable to model}

\item{n_workers}{Integer. Number of parallel workers to use (default: 4)}

\item{output_dir}{Character. Directory to save results (default: tempdir())}

\item{chunk_size}{Integer. DEPRECATED - kept for backwards compatibility}

\item{grid_size}{Integer. Grid search size for each model (default: 10)}

\item{bayesian_iter}{Integer. Bayesian optimization iterations (default: 15)}

\item{cv_folds}{Integer. Cross-validation folds (default: 5)}

\item{seed}{Integer. Random seed for reproducibility (default: 123)}

\item{save_individual_models}{Logical. Save each successful model immediately (default: FALSE)}

\item{verbose}{Logical. Print progress information (default: TRUE)}
}
\value{
A tibble containing all model results with columns:
\itemize{
\item Configuration columns from input configs
\item \strong{rmse, rrmse, rsq, mae, rpd}: Performance metrics
\item \strong{runtime_seconds}: Execution time per model
\item \strong{status}: "success" or "failed"
\item \strong{best_params}: Nested list of optimal hyperparameters
\item \strong{error_info}: Error details for failed models
\item \strong{tuning_info}: Timing and convergence details
}
}
\description{
Orchestrates parallel evaluation of multiple spectral model configurations using
\code{evaluate_single_model_parallel()}. Uses work-stealing parallelization for optimal
load balancing - each model is processed as an independent task, preventing idle
workers when some models take longer than others.
}
\details{
This function provides a clean parallel interface that:
\itemize{
\item Uses work-stealing for optimal load balancing
\item Prevents nested parallelization issues
\item Aggregates results into a single tibble
\item Saves detailed error logs for debugging
\item Manages memory efficiently across workers
}
}
